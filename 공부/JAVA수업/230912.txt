<클래스의 상속>

굉~~~~~~~~~~~~~~~~~~~장히 중요한데 잘 안씀 ㅋ;ㅋ;ㅋ;
상속을 알아야 하는 이유: interface 

상위클래스의 멤버변수, 메소드를 그대로 이어받아 확장

차-> 승용차,트럭,버스
	|    |    |
    모닝    포터
    아반떼

동물-> 포유류-> 고래

최상위클래스 : 오브젝트 클래스

<클래스패스>

out: 컴파일한 결과가 들어있는 폴더
src: 최상위폴더
소스밑에 들어있는 폴더: 패키지

프로젝트를 시작하면 기본 클래스패스를 만들어놓고 시작함

패키지 만든 후 메인은 소스 바로밑에 

<정보 은닉 그리고 캡슐화>

캡슐화: 모듈화
내부에는 열려있고 외부에는 닫혀있음
통신은 메소드로 함



private 

: 자기자신 내부에서만 사용 가능

public

:내외부 다 사용가능

 protected

: 같은 패키지 안에서만 사용가능



<클래스 변수와 클래스 메소드>

-static
프로그램이 실행되면 올라가고 종료되면 사라짐
실행되는동안 데이터가 유지
클래스가 저장
자바는 실행하면 제일먼저 메인메소드를 찾음 ->그러므로 static이 붙음
가능한한 쓰지 마셈
메소드에만 주로 쓰셈

-stack
객체가 생성되는 곳
중괄호가 열고 닫히면 사라짐/

-heap
mallco?

<배열>
개념만 알고 있기

데이터 넣는 방법: 
//멤버변수로 초기화

//seter를 이용해 호출

//생성자 이용


//super() -> 상위 클래스 생성자 호출
오퍼레이션 메인메소드 실행->비지니스 클래스에 객체 -> 비지니스 클래스에 생성자를 던져줌
->슈퍼키워드 -> 맨으로 확장 -

자바는 하나의 클래스만 상속받을 수 있음...
=> interface는 가능

1.interface에서는 틀을 선언만 함 
2.interface를 구현하기 위해서는 구현할 클래스에서 무조건 정의해야함
3.정의 할 때는 interface에서 선언한 method, parameter, retrun 이 똑같아야함
  오버라이드를 통해 재정의
->다중상속이 가능함

리스트

<interface> == 틀. 껍데기... 맛있겠다...
 interface : 구현 implements
확장성 증가
재사용성 증가

싱글톤기법 : 싱글톤 패턴이란 단 하나의 유일한 객체를 만들기 위한 코드 패턴이다. 
메모리 절약을 위해, 인스턴스가 필요할 때 똑같은 인스턴스를 새로 만들지 않고 
기존의 인스턴스를 가져와 활용하는 기법을 말한다.

스레드 

웹 프로그래밍 -> 스프링